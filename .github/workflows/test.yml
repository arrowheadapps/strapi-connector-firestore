name: Tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: 
        flattening: [flatten_all, flatten_none, flatten_mixed_src, flatten_mixed_target]
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Cache NPM packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # FIXME:
      # Lockfile version 2 with npm@7 broke compatibility with installation
      - name: Upgrade npm
        run: sudo npm i -g npm
      
      # Install the package
      - name: Install root package
        run: npm ci

      # Setup and install the test environment
      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install test package
        run: npm ci --prefix test
      - name: Cache emulators
        uses: actions/cache@v2.0.0
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}
      - name: Install emulators
        run: test/node_modules/.bin/firebase setup:emulators:firestore 

      # Run tests
      # Set output coverage JSON regardless if test failed or not
      - name: Run tests
        run: npm test
        env: 
          FLATTENING: ${{ matrix.flattening }}
      - name: Upload coverage
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: coverage_${{ matrix.flattening }}
          path: |
            coverage/coverage.json
            coverage/results.json

  results:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: test
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
      - name: Cache NPM packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # FIXME:
      # Lockfile version 2 with npm@7 broke compatibility with installation
      - name: Upgrade npm
        run: sudo npm i -g npm
        
      # Install the package
      - name: Install root package
        run: npm ci
  
      # Download individual coverage reports
      - uses: actions/download-artifact@v2
        with:
          path: coverage

      # Install the test package
      - name: Install test package
        run: npm ci --prefix test
      
      # Report pass/fail results
      - name: Report results
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
            const report = require(`${process.env.GITHUB_WORKSPACE}/test/report.js`);
            return await report({ github, context, core, io });

      # Combine coverage
      - name: Combine coverage
        run: npm run coverage-combine -s --prefix test
      
      # Upload report
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          directory: coverage/combined
          fail_ci_if_error: true
